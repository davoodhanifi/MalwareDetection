from FeatureExtract.extract import analyze
import numpy as np
import os
import logging
from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, classification_report, confusion_matrix

def build_test_from_files(feature_selection_model, model, path):
    LOG = logging.getLogger()
    LOG_FILE = "result.log"
    files = []
    pre_count = [0, 0]

    for parent, dirname, filenames in os.walk(path):
        for filename in filenames:
            extension = os.path.splitext(filename)[1]

            if extension == '.apk':
                print "File: ", filename
                files.append(os.path.join(parent, filename))
            
    for filename in files:
        # extract
        print "-----------------------------"
        print "File: ", filename
        app_feature = None
        try:
            app_feature = analyze(filename)
        except Exception as e:
            print "Exception: ", str(e)
        print "length of  app_feature: ", len(app_feature)
        pre_x = np.array(app_feature)
        new_data = feature_selection_model.transform(pre_x)
        pred = model.predict(np.array(new_data).reshape(1,-1))
        pre_y = int(pred[0])
        print "Predict is ", pre_y
        pre_count[pre_y] += 1
        print "pre_count: ", pre_count

        f = open(LOG_FILE, "a")
        f.write("%s %d\n" % (filename, pre_y))
        f.close()
